{"remainingRequest":"C:\\Users\\jonha\\Google Drive\\Skole\\Programutvikling\\INF319\\Firebase\\SAVuegram\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jonha\\Google Drive\\Skole\\Programutvikling\\INF319\\Firebase\\SAVuegram\\src\\views\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jonha\\Google Drive\\Skole\\Programutvikling\\INF319\\Firebase\\SAVuegram\\src\\views\\Dashboard.vue","mtime":1602496932903},{"path":"C:\\Users\\jonha\\Google Drive\\Skole\\Programutvikling\\INF319\\Firebase\\SAVuegram\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jonha\\Google Drive\\Skole\\Programutvikling\\INF319\\Firebase\\SAVuegram\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\jonha\\Google Drive\\Skole\\Programutvikling\\INF319\\Firebase\\SAVuegram\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jonha\\Google Drive\\Skole\\Programutvikling\\INF319\\Firebase\\SAVuegram\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBjb21tZW50c0NvbGxlY3Rpb24gfSBmcm9tICdAL2ZpcmViYXNlJw0KaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4Jw0KaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnDQppbXBvcnQgQ29tbWVudE1vZGFsIGZyb20gJ0AvY29tcG9uZW50cy9Db21tZW50TW9kYWwnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgY29tcG9uZW50czogew0KICAgIENvbW1lbnRNb2RhbA0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBwb3N0OiB7DQogICAgICAgIGNvbnRlbnQ6ICcnDQogICAgICB9LA0KICAgICAgc2hvd0NvbW1lbnRNb2RhbDogZmFsc2UsDQogICAgICBzZWxlY3RlZFBvc3Q6IHt9LA0KICAgICAgc2hvd1Bvc3RNb2RhbDogZmFsc2UsDQogICAgICBmdWxsUG9zdDoge30sDQogICAgICBwb3N0Q29tbWVudHM6IFtdDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKFsndXNlclByb2ZpbGUnLCAncG9zdHMnXSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGNyZWF0ZVBvc3QoKSB7DQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY3JlYXRlUG9zdCcsIHsgY29udGVudDogdGhpcy5wb3N0LmNvbnRlbnQgfSkNCiAgICAgIHRoaXMucG9zdC5jb250ZW50ID0gJycNCiAgICB9LA0KICAgIHRvZ2dsZUNvbW1lbnRNb2RhbChwb3N0KSB7DQogICAgICB0aGlzLnNob3dDb21tZW50TW9kYWwgPSAhdGhpcy5zaG93Q29tbWVudE1vZGFsDQoNCiAgICAgIC8vIGlmIG9wZW5pbmcgbW9kYWwgc2V0IHNlbGVjdGVkUG9zdCwgZWxzZSBjbGVhcg0KICAgICAgaWYgKHRoaXMuc2hvd0NvbW1lbnRNb2RhbCkgew0KICAgICAgICB0aGlzLnNlbGVjdGVkUG9zdCA9IHBvc3QNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuc2VsZWN0ZWRQb3N0ID0ge30NCiAgICAgIH0NCiAgICB9LA0KICAgIGxpa2VQb3N0KGlkLCBsaWtlc0NvdW50KSB7DQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbGlrZVBvc3QnLCB7IGlkLCBsaWtlc0NvdW50IH0pDQogICAgfSwNCiAgICBhc3luYyB2aWV3UG9zdChwb3N0KSB7DQogICAgICBjb25zdCBkb2NzID0gYXdhaXQgY29tbWVudHNDb2xsZWN0aW9uLndoZXJlKCdwb3N0SWQnLCAnPT0nLCBwb3N0LmlkKS5nZXQoKQ0KDQogICAgICBkb2NzLmZvckVhY2goZG9jID0+IHsNCiAgICAgICAgbGV0IGNvbW1lbnQgPSBkb2MuZGF0YSgpDQogICAgICAgIGNvbW1lbnQuaWQgPSBkb2MuaWQNCiAgICAgICAgdGhpcy5wb3N0Q29tbWVudHMucHVzaChjb21tZW50KQ0KICAgICAgfSkNCg0KICAgICAgdGhpcy5mdWxsUG9zdCA9IHBvc3QNCiAgICAgIHRoaXMuc2hvd1Bvc3RNb2RhbCA9IHRydWUNCiAgICB9LA0KICAgIGNsb3NlUG9zdE1vZGFsKCkgew0KICAgICAgdGhpcy5wb3N0Q29tbWVudHMgPSBbXQ0KICAgICAgdGhpcy5zaG93UG9zdE1vZGFsID0gZmFsc2UNCiAgICB9DQogIH0sDQogIGZpbHRlcnM6IHsNCiAgICBmb3JtYXREYXRlKHZhbCkgew0KICAgICAgaWYgKCF2YWwpIHsgcmV0dXJuICctJyB9DQoNCiAgICAgIGxldCBkYXRlID0gdmFsLnRvRGF0ZSgpDQogICAgICByZXR1cm4gbW9tZW50KGRhdGUpLmZyb21Ob3coKQ0KICAgIH0sDQogICAgdHJpbUxlbmd0aCh2YWwpIHsNCiAgICAgIGlmICh2YWwubGVuZ3RoIDwgMjAwKSB7IHJldHVybiB2YWwgfQ0KICAgICAgcmV0dXJuIGAke3ZhbC5zdWJzdHJpbmcoMCwgMjAwKX0uLi5gDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div id=\"dashboard\">\r\n    <transition name=\"fade\">\r\n      <CommentModal v-if=\"showCommentModal\" :post=\"selectedPost\" @close=\"toggleCommentModal()\"></CommentModal>\r\n    </transition>\r\n    <section>\r\n      <div class=\"col1\">\r\n        <div class=\"profile\">\r\n          <h5>{{ userProfile.name }}</h5>\r\n          <p>{{ userProfile.title }}</p>\r\n          <div class=\"create-post\">\r\n            <p>create a post</p>\r\n            <form @submit.prevent>\r\n              <textarea v-model.trim=\"post.content\"></textarea>\r\n              <button @click=\"createPost()\" :disabled=\"post.content === ''\" class=\"button\">post</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col2\">\r\n        <div v-if=\"posts.length\">\r\n          <div v-for=\"post in posts\" :key=\"post.id\" class=\"post\">\r\n            <h5>{{ post.userName }}</h5>\r\n            <span>{{ post.createdOn | formatDate }}</span>\r\n            <p>{{ post.content | trimLength }}</p>\r\n            <ul>\r\n              <li><a @click=\"toggleCommentModal(post)\">comments {{ post.comments }}</a></li>\r\n              <li><a @click=\"likePost(post.id, post.likes)\">likes {{ post.likes }}</a></li>\r\n              <li><a @click=\"viewPost(post)\">view full post</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div v-else>\r\n          <p class=\"no-results\">There are currently no posts</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- full post modal -->\r\n    <transition name=\"fade\">\r\n      <div v-if=\"showPostModal\" class=\"p-modal\">\r\n        <div class=\"p-container\">\r\n          <a @click=\"closePostModal()\" class=\"close\">close</a>\r\n          <div class=\"post\">\r\n            <h5>{{ fullPost.userName }}</h5>\r\n            <span>{{ fullPost.createdOn | formatDate }}</span>\r\n            <p>{{ fullPost.content }}</p>\r\n            <ul>\r\n              <li><a>comments {{ fullPost.comments }}</a></li>\r\n              <li><a>likes {{ fullPost.likes }}</a></li>\r\n            </ul>\r\n          </div>\r\n          <div v-show=\"postComments.length\" class=\"comments\">\r\n            <div v-for=\"comment in postComments\" :key=\"comment.id\" class=\"comment\">\r\n              <p>{{ comment.userName }}</p>\r\n              <span>{{ comment.createdOn | formatDate }}</span>\r\n              <p>{{ comment.content }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { commentsCollection } from '@/firebase'\r\nimport { mapState } from 'vuex'\r\nimport moment from 'moment'\r\nimport CommentModal from '@/components/CommentModal'\r\n\r\nexport default {\r\n  components: {\r\n    CommentModal\r\n  },\r\n  data() {\r\n    return {\r\n      post: {\r\n        content: ''\r\n      },\r\n      showCommentModal: false,\r\n      selectedPost: {},\r\n      showPostModal: false,\r\n      fullPost: {},\r\n      postComments: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['userProfile', 'posts'])\r\n  },\r\n  methods: {\r\n    createPost() {\r\n      this.$store.dispatch('createPost', { content: this.post.content })\r\n      this.post.content = ''\r\n    },\r\n    toggleCommentModal(post) {\r\n      this.showCommentModal = !this.showCommentModal\r\n\r\n      // if opening modal set selectedPost, else clear\r\n      if (this.showCommentModal) {\r\n        this.selectedPost = post\r\n      } else {\r\n        this.selectedPost = {}\r\n      }\r\n    },\r\n    likePost(id, likesCount) {\r\n      this.$store.dispatch('likePost', { id, likesCount })\r\n    },\r\n    async viewPost(post) {\r\n      const docs = await commentsCollection.where('postId', '==', post.id).get()\r\n\r\n      docs.forEach(doc => {\r\n        let comment = doc.data()\r\n        comment.id = doc.id\r\n        this.postComments.push(comment)\r\n      })\r\n\r\n      this.fullPost = post\r\n      this.showPostModal = true\r\n    },\r\n    closePostModal() {\r\n      this.postComments = []\r\n      this.showPostModal = false\r\n    }\r\n  },\r\n  filters: {\r\n    formatDate(val) {\r\n      if (!val) { return '-' }\r\n\r\n      let date = val.toDate()\r\n      return moment(date).fromNow()\r\n    },\r\n    trimLength(val) {\r\n      if (val.length < 200) { return val }\r\n      return `${val.substring(0, 200)}...`\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n"]}]}